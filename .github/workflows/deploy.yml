name: Deploy

on:
  push:
    branches:
      - master

jobs:
  commit-hash:
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.commit_hash.outputs.hash }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Get short commit hash
        id: commit_hash
        run: echo "hash=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

  setup-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx

  check-changed-gateways:
    runs-on: ubuntu-latest
    outputs:
      user: ${{ steps.changed-files.outputs.user-gateway_any_changed }}

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v38
        with:
          files_yaml: |
            user-gateway:
              - 'user-gateway/**'
              - '!user-gateway/.sample.env'

  build-user-gateway:
    needs: [setup-docker, commit-hash, check-changed-gateways]
    if: ${{ needs.check-changed-gateways.outputs.payment == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Login Docker Hub
        uses: docker/login-action@v1
        id: docker_session
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_PASSWORD}}

      - name: Build user-gateway
        uses: docker/build-push-action@v2
        id: build-user-gateway
        with:
          context: .
          file: ./user-gateway/Dockerfile
          builder: ${{ needs.setup-docker.outputs.name }}
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/user-gateway:${{ needs.commit-hash.outputs.hash }}, ${{secrets.DOCKER_USERNAME}}/user-gateway:latest

      - name: Verify Build user-gateway
        run: echo ${{ steps.build-user-gateway.outputs.digest }}

  deploy-to-server:
    needs:
      [
        build-user-gateway,
      ]

    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/deploy/gotrek-gateways/docker
            docker login -u ${{secrets.DOCKER_USERNAME}} -p ${{secrets.DOCKER_PASSWORD}}
            docker-compose -f docker-compose.gateways.yml pull
            docker-compose -f docker-compose.gateways.yml up -d
            docker image prune -f